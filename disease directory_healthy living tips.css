@keyframes upAndDown {
    0% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px); /* Move up */
    }
    100% {
      transform: translateY(0); /* Move back to the original position */
    }
  }
  
  h6{
  font-size: 28px;
  margin-top: 30px;
  margin-bottom: 5px;
  font-family: "Montserrat", sans-serif;
  font-optical-sizing: auto;
 font-weight: 700;
  text-align: center;
  color: rgb(10,42,19);
  }
  h6 a:hover{
          color: rgb(28, 95, 47);
          font-size:33px;
      }
  .sections-container{
      display: block;
      margin-top: 40px;
  width: 80%;
  margin-left: 8%;
  margin-right: 10%;
  height: fit-content;
  align-items: center;
  align-content: center;
  }
  .sections-row{
      display: flex;
   margin-top: 50px;
   align-items: center;
   align-content: center;
  }
  .image-container{
      position: relative;
      display: block;
      height: 300px;
      width: 320px;
      height: 250px;
      margin-right: 10px;
      margin-left: 10px;
     
  }
  .image-container .images{
      width: inherit;
      height: inherit;
      margin-right: 10px;
      margin-left: 10px;
      box-shadow: 0px 10px 15px rgba(12,13,43,0.5); /* Adds shadow under the image */
    
    }
  .image-container .transparent-sections{
      position: absolute;
      top:75px;
     left: 10px;
      background-color: rgba(38, 84, 137, 0.7);
      width: inherit;
      height: 100px; 
      text-align: center;
      align-content: center;
      font-family:"Montserrat", sans-serif;
    color: white;
      font-size:18px;
      font-weight: bold;
      z-index: 1; /* Ensure overlay is above the image */
  }
  .image-container .transparent-sections a{
      text-decoration: none;
      color: inherit;
  }
  .image-container .transparent-sections a:hover{
      color: rgba(3, 183, 54, 0.811);
      font-size: 22px;
      cursor: pointer;
  }
  .image-container.hovered{
      animation: upAndDown 1s ease-in-out infinite;
  }